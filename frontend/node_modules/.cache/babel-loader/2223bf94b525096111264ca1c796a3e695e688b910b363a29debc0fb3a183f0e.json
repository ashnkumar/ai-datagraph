{"ast":null,"code":"var _jsxFileName = \"/Users/ashwinkumar/Coding/Hackathons/ConstellationAug2024/ai_datagraph/frontend/src/pages/ViewUpdates.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTable } from 'react-table';\nimport './ViewUpdates.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewUpdates = () => {\n  _s();\n  const [updates, setUpdates] = useState([]);\n  useEffect(() => {\n    const fetchUpdates = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/view-updates');\n        // Convert the Firestore timestamp to a readable date format and handle undefined fields\n        const processedUpdates = response.data.map(update => ({\n          ...update,\n          timestamp: new Date(update.timestamp.seconds * 1000).toLocaleString(),\n          // Convert Firestore timestamp to readable date\n          steps: update.private_data.steps || 'N/A',\n          // Handle undefined fields\n          sleep_hours: update.private_data.sleep_hours || 'N/A',\n          calories_consumed: update.private_data.calories_consumed || 'N/A',\n          exercise_minutes: update.private_data.exercise_minutes || 'N/A',\n          calories_expended: update.private_data.calories_expended || 'N/A',\n          resting_heart_rate: update.private_data.resting_heart_rate || 'N/A',\n          heart_rate: update.private_data.heart_rate || 'N/A',\n          blood_pressure: update.blood_pressure || 'N/A',\n          usage_since_last_reward: update.usage_since_last_reward || 0 // Ensure usage field is present\n        }));\n        setUpdates(processedUpdates);\n      } catch (error) {\n        console.error('Error fetching updates:', error);\n      }\n    };\n    fetchUpdates();\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'Timestamp',\n    accessor: 'timestamp' // This is now a string, so it can be rendered directly\n  }, {\n    Header: 'Wallet Address',\n    accessor: 'wallet_address'\n  }, {\n    Header: 'Steps',\n    accessor: 'steps'\n  }, {\n    Header: 'Sleep Hours',\n    accessor: 'sleep_hours'\n  }, {\n    Header: 'Calories Consumed',\n    accessor: 'calories_consumed'\n  }, {\n    Header: 'Exercise Minutes',\n    accessor: 'exercise_minutes'\n  }, {\n    Header: 'Calories Expended',\n    accessor: 'calories_expended'\n  }, {\n    Header: 'Resting Heart Rate',\n    accessor: 'resting_heart_rate'\n  }, {\n    Header: 'Heart Rate',\n    accessor: 'heart_rate'\n  }, {\n    Header: 'Blood Pressure',\n    accessor: 'blood_pressure'\n  }, {\n    Header: 'Usage Since Last Reward',\n    accessor: 'usage_since_last_reward'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: updates\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-updates-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewUpdates, \"pe+qRhFTyMXc2mKbHLhIh+3l4kQ=\", false, function () {\n  return [useTable];\n});\n_c = ViewUpdates;\nexport default ViewUpdates;\nvar _c;\n$RefreshReg$(_c, \"ViewUpdates\");","map":{"version":3,"names":["React","useEffect","useState","axios","useTable","jsxDEV","_jsxDEV","ViewUpdates","_s","updates","setUpdates","fetchUpdates","response","get","processedUpdates","data","map","update","timestamp","Date","seconds","toLocaleString","steps","private_data","sleep_hours","calories_consumed","exercise_minutes","calories_expended","resting_heart_rate","heart_rate","blood_pressure","usage_since_last_reward","error","console","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/ashwinkumar/Coding/Hackathons/ConstellationAug2024/ai_datagraph/frontend/src/pages/ViewUpdates.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTable } from 'react-table';\nimport './ViewUpdates.css';\n\nconst ViewUpdates = () => {\n  const [updates, setUpdates] = useState([]);\n\n  useEffect(() => {\n    const fetchUpdates = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/view-updates');\n        // Convert the Firestore timestamp to a readable date format and handle undefined fields\n        const processedUpdates = response.data.map(update => ({\n          ...update,\n          timestamp: new Date(update.timestamp.seconds * 1000).toLocaleString(), // Convert Firestore timestamp to readable date\n          steps: update.private_data.steps || 'N/A', // Handle undefined fields\n          sleep_hours: update.private_data.sleep_hours || 'N/A',\n          calories_consumed: update.private_data.calories_consumed || 'N/A',\n          exercise_minutes: update.private_data.exercise_minutes || 'N/A',\n          calories_expended: update.private_data.calories_expended || 'N/A',\n          resting_heart_rate: update.private_data.resting_heart_rate || 'N/A',\n          heart_rate: update.private_data.heart_rate || 'N/A',\n          blood_pressure: update.blood_pressure || 'N/A',\n          usage_since_last_reward: update.usage_since_last_reward || 0 // Ensure usage field is present\n        }));\n        setUpdates(processedUpdates);\n      } catch (error) {\n        console.error('Error fetching updates:', error);\n      }\n    };\n\n    fetchUpdates();\n  }, []);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Timestamp',\n        accessor: 'timestamp', // This is now a string, so it can be rendered directly\n      },\n      {\n        Header: 'Wallet Address',\n        accessor: 'wallet_address',\n      },\n      {\n        Header: 'Steps',\n        accessor: 'steps',\n      },\n      {\n        Header: 'Sleep Hours',\n        accessor: 'sleep_hours',\n      },\n      {\n        Header: 'Calories Consumed',\n        accessor: 'calories_consumed',\n      },\n      {\n        Header: 'Exercise Minutes',\n        accessor: 'exercise_minutes',\n      },\n      {\n        Header: 'Calories Expended',\n        accessor: 'calories_expended',\n      },\n      {\n        Header: 'Resting Heart Rate',\n        accessor: 'resting_heart_rate',\n      },\n      {\n        Header: 'Heart Rate',\n        accessor: 'heart_rate',\n      },\n      {\n        Header: 'Blood Pressure',\n        accessor: 'blood_pressure',\n      },\n      {\n        Header: 'Usage Since Last Reward',\n        accessor: 'usage_since_last_reward',\n      }\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data: updates });\n\n  return (\n    <div className=\"view-updates-container\">\n      <h2>View Updates</h2>\n      <table {...getTableProps()} className=\"table\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ViewUpdates;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}